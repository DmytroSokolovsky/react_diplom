{"version":3,"file":"static/js/277.7ce98ff5.chunk.js","mappings":"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","sources":["api/api.js","webpack://ui/./src/components/Modal/Modal.module.scss?b72d","components/Modal/Modal.jsx","webpack://ui/./src/components/Records/RecordItem/RecordItem.module.scss?abff","components/Records/RecordItem/RecordItem.jsx","webpack://ui/./src/components/Records/RecordList/RecordList.module.scss?283d","components/Records/RecordList/RecordList.jsx","api/records-api.js","components/Records/Records.jsx","webpack://ui/./src/components/common/Toast/Toast.module.scss?a9e2","components/common/Toast/Toast.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: 'https://api-diplom-eupy.onrender.com/api/'\r\n});","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"Modal_modal__GYX1Z\",\"modal__container\":\"Modal_modal__container__c+3RE\",\"modal__title\":\"Modal_modal__title__+Y9C8\",\"modal__buttons\":\"Modal_modal__buttons__9UWYR\",\"modal__button\":\"Modal_modal__button__1NCkg\"};","import { createPortal } from 'react-dom';\r\nimport { useEffect, useRef } from 'react';\r\nimport s from './Modal.module.scss';\r\n\r\nconst Modal = ({ onConfirm, onCancel, record }) => {\r\n  const modalRef = useRef(null);\r\n  const firstButtonRef = useRef(null);\r\n  const lastButtonRef = useRef(null);\r\n\r\n  const handleKeyDown = (event) => {\r\n    if (event.key === 'Escape') {\r\n      onCancel();\r\n    }\r\n\r\n    if (event.key === 'Tab') {\r\n      const focusableElements = modalRef.current.querySelectorAll('button');\r\n      const firstElement = focusableElements[0];\r\n      const lastElement = focusableElements[focusableElements.length - 1];\r\n\r\n      if (event.shiftKey) { \r\n        if (document.activeElement === firstElement) {\r\n          event.preventDefault();\r\n          lastElement.focus();\r\n        }\r\n      } else { \r\n        if (document.activeElement === lastElement) {\r\n          event.preventDefault();\r\n          firstElement.focus(); \r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    firstButtonRef.current.focus(); \r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  }, []);\r\n\r\n  return createPortal(\r\n    <div className={s.modal} role=\"dialog\" aria-modal=\"true\" aria-labelledby=\"modal-title\" aria-describedby=\"modal-description\">\r\n      <div className={s.modal__container} ref={modalRef}>\r\n        <div className={s.modal__body}>\r\n          <div id=\"modal-title\" className={s.modal__title}>Ви дійсно бажаєте видалити запис до лікаря {record?.doctor} на {record?.date} о {record?.time}?</div>\r\n          <div id=\"modal-description\" className={s.modal__buttons}>\r\n            <button\r\n              className={s.modal__button}\r\n              onClick={onConfirm}\r\n              aria-label=\"Підтвердити видалення запису\"\r\n              ref={firstButtonRef}\r\n            >\r\n              Так\r\n            </button>\r\n            <button\r\n              className={s.modal__button}\r\n              onClick={onCancel}\r\n              aria-label=\"Скасувати видалення запису\"\r\n              ref={lastButtonRef} \r\n            >\r\n              Ні\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>,\r\n    document.body,\r\n  );\r\n};\r\n\r\nexport default Modal;","// extracted by mini-css-extract-plugin\nexport default {\"record\":\"RecordItem_record__1bx+W\",\"record__delete\":\"RecordItem_record__delete__tVIVl\"};","import s from './RecordItem.module.scss'\r\n\r\nfunction RecordItem({ record, onDelete }) {\r\n  return (\r\n    <div className={s.record} role=\"article\" aria-labelledby={`record-${record._id}`}>\r\n      <p tabIndex={0}><span>Лікар:</span> {record.doctor}</p>\r\n      <p tabIndex={0}><span>Дата:</span> {record.date}</p>\r\n      <p tabIndex={0}><span>Час:</span> {record.time}</p>\r\n      <button \r\n        className={s.record__delete} \r\n        onClick={() => onDelete(record)} \r\n        aria-label={`Видалити запис до лікаря ${record.doctor} на ${record.date} о ${record.time}`}\r\n      >\r\n        Видалити запис\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecordItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"records\":\"RecordList_records__Cd2hk\",\"records__title\":\"RecordList_records__title__4niOz\",\"records__no\":\"RecordList_records__no__hZbML\"};","import RecordItem from '../RecordItem/RecordItem';\r\nimport s from './RecordList.module.scss'\r\n\r\nfunction RecordList({ records, onDelete, errorMessage }) {\r\n  if (errorMessage) {\r\n    return null; \r\n  }\r\n\r\n  return (\r\n    <div className={s.records} role=\"region\" aria-labelledby=\"records-title\">\r\n      <h2 tabIndex={0} id=\"records-title\" className={s.records__title}>Ваші записи</h2>\r\n      <div className={s.records__list} role=\"list\">\r\n        {records.length > 0 ? (\r\n          records.map(record => (\r\n            <div role=\"listitem\" key={record._id}>\r\n              <RecordItem record={record} onDelete={onDelete} />\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p className={s.records__no} role=\"alert\">Записи відсутні</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RecordList;\r\n\r\n","import { instance } from \"./api\";\r\n\r\nexport const recordsAPI = {\r\n  get(recordId) {\r\n    return instance\r\n      .get(`records/${recordId}`)\r\n      .then(response => response.data);\r\n  },\r\n  delete(recordId) {\r\n    return instance\r\n      .delete(`records/${recordId}`)\r\n      .then(response => response.data);\r\n  }\r\n  \r\n}","import { useContext, useEffect, useState, useCallback } from 'react';\r\nimport { UserIdContext } from '../../context/context';\r\nimport Modal from './../Modal/Modal';\r\nimport RecordList from './RecordList/RecordList';\r\nimport { recordsAPI } from '../../api/records-api';\r\nimport { useTelegram } from '../../hooks/useTelegram';\r\nimport { Toast } from '../common/Toast/Toast';\r\n\r\nfunction Records() {\r\n  const { tg, onReady, sendDataToTelegram } = useTelegram();\r\n\r\n  const [records, setRecords] = useState([]);\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [recordToDelete, setRecordToDelete] = useState(null);\r\n  const [recordsErrorMessage, setRecordsErrorMessage] = useState('');\r\n  const [deleteErrorMessage, setDeleteErrorMessage] = useState(''); \r\n\r\n  const userId = useContext(UserIdContext);\r\n\r\n  useEffect(() => {\r\n    async function getRecords(userId) {\r\n      try {\r\n        const data = await recordsAPI.get(userId);\r\n        setRecords(data);\r\n      } catch (error) {\r\n        setRecordsErrorMessage('Неможливо завантажити ваші записи');\r\n      }\r\n    }\r\n\r\n    if (userId) {\r\n      getRecords(userId);\r\n    }\r\n  }, [userId]);\r\n\r\n  useEffect(() => {\r\n    onReady();\r\n  }, [onReady]);\r\n\r\n  const handleDelete = useCallback(\r\n    async (record) => {\r\n      const { _id, doctor, doctor_id, specialization, date, time, patient_name, patient_phone_number } = record;\r\n      const data = {\r\n        deletedDoctorTelegramId: doctor_id,\r\n        deletedDoctor: doctor,\r\n        deletedSpecialization: specialization,\r\n        deletedPatientName: patient_name,\r\n        deletedPatientPhoneNumber: patient_phone_number,\r\n        deletedRecordDate: date,\r\n        deletedRecordTime: time,\r\n      };\r\n\r\n      try {\r\n        await recordsAPI.delete(_id);\r\n        setRecords((prevRecords) => prevRecords.filter((rec) => rec._id !== _id));\r\n        if (tg) {\r\n          sendDataToTelegram(data);\r\n        }\r\n        closeModal();\r\n      } catch (error) {\r\n        setDeleteErrorMessage('Не вдалося видалити запис');\r\n      }\r\n    },\r\n    [sendDataToTelegram, tg]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (deleteErrorMessage) {\r\n      const timer = setTimeout(() => {\r\n        setDeleteErrorMessage(''); \r\n      }, 3000); \r\n\r\n      return () => clearTimeout(timer); \r\n    }\r\n  }, [deleteErrorMessage]);\r\n\r\n  const openModal = (record) => {\r\n    setRecordToDelete(record);\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const closeModal = () => {\r\n    setRecordToDelete(null);\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const confirmDelete = () => {\r\n    if (recordToDelete) {\r\n      handleDelete(recordToDelete);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <RecordList records={records} onDelete={openModal} errorMessage={recordsErrorMessage} />\r\n      {isOpen && <Modal onConfirm={confirmDelete} onCancel={closeModal} record={recordToDelete}/>}\r\n      {recordsErrorMessage && <Toast errorMessage={recordsErrorMessage} />}\r\n      {deleteErrorMessage && <Toast errorMessage={deleteErrorMessage} />} \r\n    </>\r\n  );\r\n}\r\n\r\nexport default Records;\r\n\r\n\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"toast\":\"Toast_toast__RH58L\",\"open\":\"Toast_open__B2TW5\"};","import { useEffect, useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport cn from 'classnames';\r\nimport s from './Toast.module.scss';\r\n\r\nexport const Toast = ({ errorMessage }) => {\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  let toastClass = cn(s.toast);\r\n\r\n  if (seconds > 0) {\r\n    toastClass = cn(s.toast, {\r\n      [s.open]: true,\r\n    });\r\n  }\r\n\r\n  if (seconds >= 2.7) {\r\n    toastClass = cn(s.toast, {\r\n      [s.open]: false,\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setSeconds(prevSeconds => prevSeconds + 0.3);\r\n    }, 300);\r\n\r\n    return () => {\r\n      clearInterval(interval);\r\n    };\r\n  }, [setSeconds]);\r\n\r\n  if (seconds >= 3) return null;\r\n\r\n  return createPortal(\r\n    <div className={toastClass}>\r\n      <span>{errorMessage}</span>\r\n    </div>,\r\n    document.body,\r\n  );\r\n};"],"names":["instance","axios","create","baseURL","_ref","onConfirm","onCancel","record","modalRef","useRef","firstButtonRef","lastButtonRef","handleKeyDown","event","key","focusableElements","current","querySelectorAll","firstElement","lastElement","length","shiftKey","document","activeElement","preventDefault","focus","useEffect","window","addEventListener","removeEventListener","createPortal","_jsx","className","s","modal","role","children","modal__container","ref","_jsxs","modal__body","id","modal__title","doctor","date","time","modal__buttons","modal__button","onClick","body","onDelete","_id","tabIndex","records","errorMessage","records__title","records__list","map","RecordItem","records__no","recordsAPI","get","recordId","then","response","data","delete","tg","onReady","sendDataToTelegram","useTelegram","setRecords","useState","isOpen","setIsOpen","recordToDelete","setRecordToDelete","recordsErrorMessage","setRecordsErrorMessage","deleteErrorMessage","setDeleteErrorMessage","userId","useContext","UserIdContext","async","error","getRecords","handleDelete","useCallback","doctor_id","specialization","patient_name","patient_phone_number","deletedDoctorTelegramId","deletedDoctor","deletedSpecialization","deletedPatientName","deletedPatientPhoneNumber","deletedRecordDate","deletedRecordTime","prevRecords","filter","rec","closeModal","timer","setTimeout","clearTimeout","_Fragment","RecordList","Modal","confirmDelete","Toast","seconds","setSeconds","toastClass","cn","interval","setInterval","prevSeconds","clearInterval"],"sourceRoot":""}